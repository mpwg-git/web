h1{font-family:'PaytoneOne',sans-serif;font-size:3.375em}h2{font-family:'PaytoneOne',sans-serif;font-size:2.375em}h3{font-family:'PaytoneOne',sans-serif;font-size:1.75em}h4{font-family:'NunitoSans-black',sans-serif;font-size:1.3125em}h5{font-family:'NunitoSans-black',sans-serif;font-size:.875em}h6{font-family:'NunitoSans-regular',sans-serif;font-size:.875em}h7{font-family:'NunitoSans-extrabold',sans-serif;font-size:.625em;color:#04e0d7;text-transform:uppercase;line-height:1.16666667em}h1,h2,h3{color:#04e0d7}p{font-family:'NunitoSans-light';font-size:.875em}label h5{font-size:.9375em}@media only screen and (min-width:992px){h1{font-size:3em}h2{font-size:1.5em}h3{font-size:1.2em}h4{font-size:1.2em}}.mpwg-color{color:#04e0d7}.no-outline{outline:0 !important}.custList{counter-reset:item;list-style:none}.custList>li::before{content:counter(item) ".";counter-increment:item}.hangList>li{position:relative}.hangList>li:before{content:counter(item);position:absolute;left:0}.dummyClass{background-color:red}/*# sourceMappingURL=data:application/json;base64, */