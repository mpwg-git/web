<?

class xluerzer_e
{


	public static function getConfigByScope($scope)
	{
		switch ($scope)
		{

			default:
				return false;
		}
	}
	
	
	
	public static function defaultGetDetails($scope, $id)
	{
		$id = intval($id);
		$db = Ixcore::DB_NAME;
		dbx2::select_database($db);
		$selectFrom = "";
		$idName = "";

		switch ($scope)
		{

			case  'e_submission_details':

				$selectFrom = "e_submissions";
				$idName = "es_id";
				break;

			default:
				return false;

		}

		$sql_data 	= "SELECT * from $selectFrom WHERE $idName = ".$id;
		
		$data 		= dbx2::query($sql_data);
		frontcontrollerx::json_success($data);
	}
	
	
	public static function defaultGetMediaType($id)
	{
		$id = intval($id);
		$db = Ixcore::DB_NAME;
		dbx2::select_database($db);
		
		// could also check for submittedFor
		
		$sql_data 	= "SELECT es_imageFileSize, es_videoFileSize from e_submissions WHERE es_id = ".$id;
		$data 		= dbx2::query($sql_data);
		
		if ($data['es_imageFileSize'] > 0) {
			$type = "img";
			return $type;
		}
		else if ($data['es_videoFileSize'] > 0) {
			$type = "vid";
			return $type;
		}
		else {
			return false;
		}
	}
	
	
	public static function defaultGetMediaYear($id)
	{
		$id = intval($id);
		$db = Ixcore::DB_NAME;
		dbx2::select_database($db);
		
		// could also check for submittedFor
		
		$sql_data 	= "SELECT DATE_FORMAT(es_created, '%Y') as year from e_submissions WHERE es_id = ".$id;
		$data 		= dbx2::query($sql_data);
		
		if ($data['year']) {
			return $data['year'];
		}
		else {
			return false;
		}
	}
	
	
	public static function defaultMedia($function, $id, $size)
	{
		$id = intval($id);
		$type = xluerzer_e::defaultGetMediaType($id);
		$year = xluerzer_e::defaultGetMediaYear($id);
		$size = "small";
		
		switch ($type)
		{

			case  'img':
				if (!$size) {$size = "medium";}
				$filename = Ixcore::htdocsRoot.'/media/submissions/print/'.$size.'/'.$year.'/'.$id.'.jpg';
				if (file_exists($filename))
				{

					header('content-type: image/jpeg');
					header('Content-length: '.filesize($filename));
					header('Content-Disposition: inline; filename="'.$s.'";');
					readfile($filename);
					exit;
				}
				else {
					die ("file ".$filename." nicht gefunden");
				}

				break;
				
			case  'vid':
				
				
				// check for poster
				if (!$size) {$size = "medium";}
				$filename = Ixcore::htdocsRoot.'/media/submissions/tv_commercials/poster/'.$size.'/'.$year.'/'.$id.'.jpg';
				if (file_exists($filename))
				{
					header('content-type: image/jpeg');
					header('Content-length: '.filesize($filename));
					header('Content-Disposition: inline; filename="'.$s.'";');
					readfile($filename);
					exit;
				}
				else {
					die ("file ".$filename." nicht gefunden");
				}
				
				// TODO				
				// check for thumbnails
				
				// check for converted files
				
			
				
				return false;
				break;

			default:
				return false;

		}

	
		frontcontrollerx::json_success($data);
	}
	
	
	
	public static function defaultSetDetails($scope, $id, $values)
	{
		
		$updateData = json_decode($values);
		
		$id = intval($id);
		$db = Ixcore::DB_NAME;
		dbx2::select_database($db);
		
		$updateTable = "";
		$idName = "";

		switch ($scope)
		{

			case  'e_submission_details':

				// $updateTable = "oe_this_week";
				// $idName = "oetw_id";
				break;

			default:
				return false;

		}



		// echo "$updateTable,$updateData,$idName,$id";
		
		/* $sql_data = "UPDATE ".$updateTable." SET ".$updateFields." WHERE ".$idName." = ".$id;
		$data = dbx2::query($sql_data); */
		
		$data = dbx2::update($updateTable,$updateData,array($idName=>$id));
		frontcontrollerx::json_success($data);
	}
	
	
	
	public static function defaultDetails($scope, $function, $id, $values) {
			switch ($function) {
					
				case 'load':
					xluerzer_e::defaultGetDetails($scope, $id);
					break;
					
				case 'save':
					xluerzer_e::defaultSetDetails($scope, $id, $values);
					break;

				default:
					break;
						
			}	
	}
	
	
	public static function defaultGetCredits($id)
	{
		$id = intval($id);
		$db = Ixcore::DB_NAME;
		dbx2::select_database($db);
		
		$sql_data 	= "SELECT ct_symbol, ct_description, esc_firstname, esc_lastname, esc_company from (e_submission_credits JOIN contact_type ON esc_contactType_id = ct_id) WHERE esc_submission_id = ".$id;
		$sql_cnt 	= "select count(esc_submission_id) as sql_cnt FROM e_submission_credits WHERE esc_submission_id = ".$id;
		
		$data 		= dbx2::query($sql_data);
		
		xluerzer_db_junky::uniqueDataGridWrapper(array(
			'db' 		=> Ixcore::DB_NAME,
			'sql_data' 	=> $sql_data,
			'sql_cnt' 	=> $sql_cnt,
	));
		
	}
	
	
	
	public static function defaultCredits($function, $id) {
			switch ($function) {
					
				case 'load':
					xluerzer_e::defaultGetCredits($id);
					break;
					
				case 'save':
					xluerzer_e::defaultSetCredits($id);
					break;

				default:
					break;
						
			}	
	}
	
	

	public static function defaultAjaxHandler($scope, $function)
	{

		switch ($scope)
		{

			case 'e_submissionSearchComboFor':


				$query = trim(dbx2::escape($_REQUEST['query']));

				switch ($function)
				{
					// TODO students tabellen auch berueksichtigen
					
					case 'submitter':

						$sql_data 	= "select DISTINCT(`SubmittedBy`) as _value, `SubmittedBy` as _display from old_lao_backend__Submissions2004 where MATCH (SubmittedBy) AGAINST ('$query')";
						$sql_cnt 	= "select count(DISTINCT(`SubmittedBy`)) as sql_cnt from old_lao_backend__Submissions2004 where MATCH (SubmittedBy) AGAINST ('$query')";

						xluerzer_db_junky::uniqueDataGridWrapper(array(
						'db' 		=> 'c1_luerzer',
						'sql_data' 	=> $sql_data,
						'sql_cnt' 	=> $sql_cnt,
						));


						break;

					case 'agency':

						$sql_data 	= "select DISTINCT(`Agency`) as _value, `Agency` as _display from old_lao_backend__Submissions2004 where MATCH (Agency) AGAINST ('$query')";
						$sql_cnt 	= "select count(DISTINCT(`Agency`)) as sql_cnt from old_lao_backend__Submissions2004 where MATCH (Agency) AGAINST ('$query')";

						xluerzer_db_junky::uniqueDataGridWrapper(array(
						'db' 		=> 'c1_luerzer',
						'sql_data' 	=> $sql_data,
						'sql_cnt' 	=> $sql_cnt,
						));


						break;

					case 'comments':

						$sql_data 	= "select DISTINCT(`Comments`) as _value, `Comments` as _display from old_lao_backend__Submissions2004 where MATCH (Comments) AGAINST ('$query')";
						$sql_cnt 	= "select count(DISTINCT(`Comments`)) as sql_cnt from old_lao_backend__Submissions2004 where MATCH (Comments) AGAINST ('$query')";

						xluerzer_db_junky::uniqueDataGridWrapper(array(
						'db' 		=> 'c1_luerzer',
						'sql_data' 	=> $sql_data,
						'sql_cnt' 	=> $sql_cnt,
						));

						break;

					case 'country':

						$sql_data 	= "select DISTINCT(`Country`) as _value, `Country` as _display from old_lao_backend__Submissions2004 where Country LIKE '%$query%'";
						$sql_cnt 	= "select count(DISTINCT(`Country`)) as sql_cnt from old_lao_backend__Submissions2004 where  Country LIKE '%$query%'";

						xluerzer_db_junky::uniqueDataGridWrapper(array(
						'db' 		=> 'c1_luerzer',
						'sql_data' 	=> $sql_data,
						'sql_cnt' 	=> $sql_cnt,
						));


						break;

					case 'submissionID':

						$sql_data 	= "select DISTINCT(`SubmissionID`) as _value, concat(SubmissionID,' - ',Agency,'/',City,'/',Title_Headline) as _display from old_lao_backend__Submissions2004 where SubmissionID = '$query'";
						$sql_cnt 	= "select count(DISTINCT(`SubmissionID`)) as sql_cnt from old_lao_backend__Submissions2004 where  SubmissionID = '$query'";

						xluerzer_db_junky::uniqueDataGridWrapper(array(
						'db' 		=> 'c1_luerzer',
						'sql_data' 	=> $sql_data,
						'sql_cnt' 	=> $sql_cnt,
						));


						break;

					case 'city':

						$sql_data 	= "select DISTINCT(`City`) as _value, `City` as _display from old_lao_backend__Submissions2004 where City LIKE '%$query%'";
						$sql_cnt 	= "select count(DISTINCT(`City`)) as sql_cnt from old_lao_backend__Submissions2004 where  City LIKE '%$query%'";

						xluerzer_db_junky::uniqueDataGridWrapper(array(
						'db' 		=> 'c1_luerzer',
						'sql_data' 	=> $sql_data,
						'sql_cnt' 	=> $sql_cnt,
						));


						break;

					case 'email':

						$sql_data 	= "select DISTINCT(`eMail`) as _value, `eMail` as _display from old_lao_backend__Submissions2004 where eMail LIKE '%$query%'";
						$sql_cnt 	= "select count(DISTINCT(`eMail`)) as sql_cnt from old_lao_backend__Submissions2004 where  eMail LIKE '%$query%'";

						xluerzer_db_junky::uniqueDataGridWrapper(array(
						'db' 		=> 'c1_luerzer',
						'sql_data' 	=> $sql_data,
						'sql_cnt' 	=> $sql_cnt,
						));


						break;

					case 'kindOf':

						$sql_data 	= "select DISTINCT(`KindOf`) as _value, `KindOf` as _display from old_lao_backend__Submissions2004 where KindOf LIKE '%$query%'";
						$sql_cnt 	= "select count(DISTINCT(`KindOf`)) as sql_cnt from old_lao_backend__Submissions2004 where KindOf LIKE '%$query%'";

						xluerzer_db_junky::uniqueDataGridWrapper(array(
						'db' 		=> 'c1_luerzer',
						'sql_data' 	=> $sql_data,
						'sql_cnt' 	=> $sql_cnt,
						));


						break;
						
					case 'submissionStatus':

						$sql_data 	= "select Status as _value, `Description` as _display from old_lao_backend__SubmissionStatus where 1";
						$sql_cnt 	= "select count(Status) as sql_cnt from old_lao_backend__SubmissionStatus where 1";

						xluerzer_db_junky::uniqueDataGridWrapper(array(
						'db' 		=> 'c1_luerzer',
						'sql_data' 	=> $sql_data,
						'sql_cnt' 	=> $sql_cnt,
						));


						break;

					default: break;
				}

				break;

			case 'e_submissionCrazyImage':

				$s = $_GET['file'];
				$m = $_GET['size'];

				$filename = '/var/www/clients/client1/web3/web/old/media/sub/'.$m.'/'.$s;
				if (file_exists($filename))
				{

					header('content-type: image/jpeg');
					header('Content-length: '.filesize($filename));
					header('Content-Disposition: inline; filename="'.$s.'";');
					readfile($filename);
					exit;
				}
				else {

					$i = 2013;
					while ($i > 2005):
					$filename = '/var/www/clients/client1/web3/web/old/media/sub/'.$m.'/'.$i.'/'.$s;
					if (file_exists($filename))
					{
						break;
					}
					// echo $i;
					$i--;
					endwhile;
					header('content-type: image/jpeg');
					header('Content-length: '.filesize($filename));
					header('Content-Disposition: inline; filename="'.$s.'";');
					readfile($filename);

				}

				die();


			case 'e_submissionOfTheDayX':

				// TODO check if student, if yes -> other db   

				$dayx 		= dbx2::escape($_REQUEST['dayx']);
				$sql_data 	= "SELECT * FROM e_submissions WHERE DATE_FORMAT(es_created,\"%Y-%m-%d\") = '$dayx'"; 
				
				// die ("sqldata: ".$sql_data);

				$sql_cnt = "SELECT count(es_id) as sql_cnt FROM `e_submissions` WHERE es_created = '$dayx'";

				xluerzer_db_junky::uniqueDataGridWrapper(array(
				'db' 		=> Ixcore::DB_NAME,
				'sql_data' 	=> $sql_data,
				'sql_cnt' 	=> $sql_cnt,
				));

				break;
								
				
			case 'e_submissions_day_overview':

				$sql_data = "SELECT

						DATE_FORMAT(es_created,\"%Y-%m-%d\") as dayx,
						count(`es_id`) as total_submissions,
						count(distinct(`es_submittedBy`)) as total_submitter,
						
						sum(`es_submittedFor`='Commercials') as total_tv,
						(select count(distinct(`es_submittedBy`)) as total_submitter from e_submissions where `es_submittedFor`='Commercials' and 
						DATE_FORMAT(es_created,\"%Y-%m-%d\") = dayx) as total_tv_submitter,
						
						
						sum(`es_submittedFor`='Magazine') as total_print,
						(select count(distinct(`es_submittedBy`)) as total_submitter from e_submissions where `es_submittedFor`='Magazine' and 
						DATE_FORMAT(es_created,\"%Y-%m-%d\") = dayx) as total_print_submitter,
						
		
						sum(`es_submittedFor`='Specials') as total_specials,
						(select count(distinct(`es_submittedBy`)) as total_submitter from e_submissions where `es_submittedFor`='Specials' and 
						DATE_FORMAT(es_created,\"%Y-%m-%d\") = dayx) as total_specials_submitter,

						(select count(`ess_id`) FROM e_submission_students WHERE DATE_FORMAT(ess_created,\"%Y-%m-%d\") = dayx) as total_students,
						(select count(distinct(`ess_submittedBy`)) FROM e_submission_students WHERE DATE_FORMAT(ess_created,\"%Y-%m-%d\") = dayx) as total_students_submitter
						
						FROM `e_submissions` WHERE 1
						
						group by `dayx`
						ORDER BY `dayx` DESC";

				$sql_cnt = "SELECT count(distinct(es_created)) as sql_cnt FROM `e_submissions` WHERE 1";


				xluerzer_db_junky::uniqueDataGridWrapper(array(
				'db' 		=> Ixcore::DB_NAME,
				'sql_data' 	=> $sql_data,
				'sql_cnt' 	=> $sql_cnt,
				));

				break;
				
			default:

				$extFunctionsConfig = self::getConfigByScope($scope);
				xluerzer_db_junky::handleDefaultExtGrid($extFunctionsConfig,$function);
		}


	}


}
